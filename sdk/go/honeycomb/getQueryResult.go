// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetQueryResult(ctx *pulumi.Context, args *GetQueryResultArgs, opts ...pulumi.InvokeOption) (*GetQueryResultResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetQueryResultResult
	err := ctx.Invoke("honeycomb:index/getQueryResult:GetQueryResult", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetQueryResult.
type GetQueryResultArgs struct {
	// The dataset this query is associated with.
	Dataset string `pulumi:"dataset"`
	// The ID of the query that will be executed to obtain the result.
	QueryId string `pulumi:"queryId"`
}

// A collection of values returned by GetQueryResult.
type GetQueryResultResult struct {
	Dataset       string `pulumi:"dataset"`
	GraphImageUrl string `pulumi:"graphImageUrl"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	QueryId string `pulumi:"queryId"`
	// The permalink to the executed query's results.
	QueryUrl string                   `pulumi:"queryUrl"`
	Results  []map[string]interface{} `pulumi:"results"`
}

func GetQueryResultOutput(ctx *pulumi.Context, args GetQueryResultOutputArgs, opts ...pulumi.InvokeOption) GetQueryResultResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQueryResultResult, error) {
			args := v.(GetQueryResultArgs)
			r, err := GetQueryResult(ctx, &args, opts...)
			var s GetQueryResultResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQueryResultResultOutput)
}

// A collection of arguments for invoking GetQueryResult.
type GetQueryResultOutputArgs struct {
	// The dataset this query is associated with.
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// The ID of the query that will be executed to obtain the result.
	QueryId pulumi.StringInput `pulumi:"queryId"`
}

func (GetQueryResultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryResultArgs)(nil)).Elem()
}

// A collection of values returned by GetQueryResult.
type GetQueryResultResultOutput struct{ *pulumi.OutputState }

func (GetQueryResultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryResultResult)(nil)).Elem()
}

func (o GetQueryResultResultOutput) ToGetQueryResultResultOutput() GetQueryResultResultOutput {
	return o
}

func (o GetQueryResultResultOutput) ToGetQueryResultResultOutputWithContext(ctx context.Context) GetQueryResultResultOutput {
	return o
}

func (o GetQueryResultResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryResultResult) string { return v.Dataset }).(pulumi.StringOutput)
}

func (o GetQueryResultResultOutput) GraphImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryResultResult) string { return v.GraphImageUrl }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetQueryResultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryResultResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQueryResultResultOutput) QueryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryResultResult) string { return v.QueryId }).(pulumi.StringOutput)
}

// The permalink to the executed query's results.
func (o GetQueryResultResultOutput) QueryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryResultResult) string { return v.QueryUrl }).(pulumi.StringOutput)
}

func (o GetQueryResultResultOutput) Results() pulumi.MapArrayOutput {
	return o.ApplyT(func(v GetQueryResultResult) []map[string]interface{} { return v.Results }).(pulumi.MapArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQueryResultResultOutput{})
}
