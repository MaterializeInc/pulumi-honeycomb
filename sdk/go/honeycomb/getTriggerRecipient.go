// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: GetTriggerRecipient
//
// Search the triggers of a dataset for a trigger recipient. The ID of the existing trigger recipient can be used when adding trigger recipients to new triggers.
//
// > **Deprecated** Use the `GetRecipient` data source instead.
func GetTriggerRecipient(ctx *pulumi.Context, args *GetTriggerRecipientArgs, opts ...pulumi.InvokeOption) (*GetTriggerRecipientResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTriggerRecipientResult
	err := ctx.Invoke("honeycomb:index/getTriggerRecipient:GetTriggerRecipient", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetTriggerRecipient.
type GetTriggerRecipientArgs struct {
	// Search through all triggers linked to this dataset.
	Dataset string `pulumi:"dataset"`
	// Target of the trigger, this has another meaning depending on the type of recipient (see the table below).
	Target *string `pulumi:"target"`
	// The type of recipient, allowed types are `email`, `marker`, `pagerduty`, `slack` and `webhook`.
	Type string `pulumi:"type"`
}

// A collection of values returned by GetTriggerRecipient.
type GetTriggerRecipientResult struct {
	Dataset string `pulumi:"dataset"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Target *string `pulumi:"target"`
	Type   string  `pulumi:"type"`
}

func GetTriggerRecipientOutput(ctx *pulumi.Context, args GetTriggerRecipientOutputArgs, opts ...pulumi.InvokeOption) GetTriggerRecipientResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTriggerRecipientResult, error) {
			args := v.(GetTriggerRecipientArgs)
			r, err := GetTriggerRecipient(ctx, &args, opts...)
			var s GetTriggerRecipientResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTriggerRecipientResultOutput)
}

// A collection of arguments for invoking GetTriggerRecipient.
type GetTriggerRecipientOutputArgs struct {
	// Search through all triggers linked to this dataset.
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// Target of the trigger, this has another meaning depending on the type of recipient (see the table below).
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of recipient, allowed types are `email`, `marker`, `pagerduty`, `slack` and `webhook`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTriggerRecipientOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerRecipientArgs)(nil)).Elem()
}

// A collection of values returned by GetTriggerRecipient.
type GetTriggerRecipientResultOutput struct{ *pulumi.OutputState }

func (GetTriggerRecipientResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTriggerRecipientResult)(nil)).Elem()
}

func (o GetTriggerRecipientResultOutput) ToGetTriggerRecipientResultOutput() GetTriggerRecipientResultOutput {
	return o
}

func (o GetTriggerRecipientResultOutput) ToGetTriggerRecipientResultOutputWithContext(ctx context.Context) GetTriggerRecipientResultOutput {
	return o
}

func (o GetTriggerRecipientResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerRecipientResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTriggerRecipientResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerRecipientResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTriggerRecipientResultOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTriggerRecipientResult) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o GetTriggerRecipientResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTriggerRecipientResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTriggerRecipientResultOutput{})
}
