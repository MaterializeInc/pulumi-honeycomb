// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package honeycomb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Data Source: GetRecipient
//
// Search the triggers or burn alerts of a dataset for a recipient. The ID of the existing recipient can be used when adding recipients to new triggers or burn alerts.
func GetRecipient(ctx *pulumi.Context, args *GetRecipientArgs, opts ...pulumi.InvokeOption) (*GetRecipientResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetRecipientResult
	err := ctx.Invoke("honeycomb:index/getRecipient:GetRecipient", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GetRecipient.
type GetRecipientArgs struct {
	// The dataset this recipient is associated with.
	Dataset string `pulumi:"dataset"`
	// Target of the trigger or burn alert, this has another meaning depending on the type of recipient (see the table below).
	Target *string `pulumi:"target"`
	// The type of recipient, allowed types are `email`, `marker`, `pagerduty`, `slack` and `webhook`.
	Type string `pulumi:"type"`
}

// A collection of values returned by GetRecipient.
type GetRecipientResult struct {
	Dataset string `pulumi:"dataset"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Target *string `pulumi:"target"`
	Type   string  `pulumi:"type"`
}

func GetRecipientOutput(ctx *pulumi.Context, args GetRecipientOutputArgs, opts ...pulumi.InvokeOption) GetRecipientResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRecipientResult, error) {
			args := v.(GetRecipientArgs)
			r, err := GetRecipient(ctx, &args, opts...)
			var s GetRecipientResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRecipientResultOutput)
}

// A collection of arguments for invoking GetRecipient.
type GetRecipientOutputArgs struct {
	// The dataset this recipient is associated with.
	Dataset pulumi.StringInput `pulumi:"dataset"`
	// Target of the trigger or burn alert, this has another meaning depending on the type of recipient (see the table below).
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The type of recipient, allowed types are `email`, `marker`, `pagerduty`, `slack` and `webhook`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRecipientOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientArgs)(nil)).Elem()
}

// A collection of values returned by GetRecipient.
type GetRecipientResultOutput struct{ *pulumi.OutputState }

func (GetRecipientResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecipientResult)(nil)).Elem()
}

func (o GetRecipientResultOutput) ToGetRecipientResultOutput() GetRecipientResultOutput {
	return o
}

func (o GetRecipientResultOutput) ToGetRecipientResultOutputWithContext(ctx context.Context) GetRecipientResultOutput {
	return o
}

func (o GetRecipientResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRecipientResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRecipientResultOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecipientResult) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o GetRecipientResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecipientResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecipientResultOutput{})
}
